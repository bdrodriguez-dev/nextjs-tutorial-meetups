{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/braulio-rodriguez/Documents/Development/tutorial-projects/nextjs-course/react-meetups/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { connectToMongoDBAndRunQuery } from \"../../utils/helpers\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const meetups = await connectToMongoDBAndRunQuery(collection => {\n    return collection.find().toArray();\n  });\n  const pathIdArray = meetups.map(meetup => {\n    return meetup.id;\n  });\n  console.log(pathIdArray);\n  return {\n    fallback: false,\n    path: pathIdArray.map(pathId => {\n      return {\n        params: {\n          meetupId: pathId\n        }\n      };\n    }) // pathIds: [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  console.log(`Hey, I'm the meetupId: ${meetupId}`);\n  let meetupData;\n\n  try {\n    meetupData = await connectToMongoDBAndRunQuery(collection => {\n      return collection.find({}, {\n        _id: meetupId\n      });\n    });\n    console.log(`Hi, I'm the meetupData: ${JSON.stringify(meetupData)}`);\n  } catch (e) {\n    console.log(e);\n  }\n\n  return {\n    props: {\n      meetupData: meetupData\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/Users/braulio-rodriguez/Documents/Development/tutorial-projects/nextjs-course/react-meetups/pages/[meetupId]/index.js"],"names":["MeetupDetail","connectToMongoDBAndRunQuery","MeetupDetailsPage","props","meetupData","title","image","address","description","getStaticPaths","meetups","collection","find","toArray","pathIdArray","map","meetup","id","console","log","fallback","path","pathId","params","meetupId","getStaticProps","context","_id","JSON","stringify","e"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,2BAAT,QAA4C,qBAA5C;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,OAAO,GAAG,MAAMT,2BAA2B,CAAEU,UAAD,IAAgB;AAChE,WAAOA,UAAU,CAACC,IAAX,GAAkBC,OAAlB,EAAP;AACD,GAFgD,CAAjD;AAGA,QAAMC,WAAW,GAAGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,IAAY;AAC1C,WAAOA,MAAM,CAACC,EAAd;AACD,GAFmB,CAApB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,SAAO;AACLM,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,IAAI,EAAEP,WAAW,CAACC,GAAZ,CAAiBO,MAAD,IAAY;AAChC,aAAO;AACLC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAEF;AADJ;AADH,OAAP;AAKD,KANK,CAFD,CASL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBK,GAAP;AAsBD;AAED,OAAO,eAAeG,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBK,QAAS,EAA/C;AACA,MAAIpB,UAAJ;;AACA,MAAI;AACFA,IAAAA,UAAU,GAAG,MAAMH,2BAA2B,CAAEU,UAAD,IAAgB;AAC7D,aAAOA,UAAU,CAACC,IAAX,CAAgB,EAAhB,EAAoB;AAAEe,QAAAA,GAAG,EAAEH;AAAP,OAApB,CAAP;AACD,KAF6C,CAA9C;AAGAN,IAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BS,IAAI,CAACC,SAAL,CAAezB,UAAf,CAA2B,EAAlE;AACD,GALD,CAKE,OAAO0B,CAAP,EAAU;AACVZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACD;;AACD,SAAO;AACL3B,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEA;AADP;AADF,GAAP;AAKD;AAED,eAAeF,iBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { connectToMongoDBAndRunQuery } from \"../../utils/helpers\";\n\nconst MeetupDetailsPage = (props) => {\n  return (\n    <MeetupDetail\n      title={props.meetupData.title}\n      image={props.meetupData.image}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const meetups = await connectToMongoDBAndRunQuery((collection) => {\n    return collection.find().toArray();\n  });\n  const pathIdArray = meetups.map((meetup) => {\n    return meetup.id;\n  });\n  console.log(pathIdArray);\n  return {\n    fallback: false,\n    path: pathIdArray.map((pathId) => {\n      return {\n        params: {\n          meetupId: pathId,\n        },\n      };\n    }),\n    // pathIds: [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    // ],\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  console.log(`Hey, I'm the meetupId: ${meetupId}`);\n  let meetupData;\n  try {\n    meetupData = await connectToMongoDBAndRunQuery((collection) => {\n      return collection.find({}, { _id: meetupId });\n    });\n    console.log(`Hi, I'm the meetupData: ${JSON.stringify(meetupData)}`);\n  } catch (e) {\n    console.log(e);\n  }\n  return {\n    props: {\n      meetupData: meetupData,\n    },\n  };\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}