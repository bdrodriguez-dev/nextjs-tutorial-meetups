{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/braulio-rodriguez/Documents/Development/tutorial-projects/nextjs-course/react-meetups/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { connectToMongoDBAndRunQuery } from \"../../utils/helpers\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const meetups = await connectToMongoDBAndRunQuery(collection => {\n    return collection.find({}, {\n      _id: 1\n    }).toArray();\n  });\n  console.log(meetups); // const pathIdArray =\n  // console.log(pathIdArray);\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      };\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  console.log(`Hey, I'm the meetupId: ${meetupId}`);\n  let meetupData;\n\n  try {\n    meetupData = await connectToMongoDBAndRunQuery(collection => {\n      return collection.findOne({\n        _id: meetupId\n      });\n    });\n    console.log(`Hi, I'm the meetupData: ${JSON.stringify(meetupData)}`);\n  } catch (e) {\n    console.log(e);\n  }\n\n  return {\n    props: {\n      meetupData: meetupData\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/Users/braulio-rodriguez/Documents/Development/tutorial-projects/nextjs-course/react-meetups/pages/[meetupId]/index.js"],"names":["MeetupDetail","connectToMongoDBAndRunQuery","MeetupDetailsPage","props","meetupData","title","image","address","description","getStaticPaths","meetups","collection","find","_id","toArray","console","log","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","JSON","stringify","e"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,2BAAT,QAA4C,qBAA5C;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,OAAO,GAAG,MAAMT,2BAA2B,CAAEU,UAAD,IAAgB;AAChE,WAAOA,UAAU,CAACC,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAApB,EAAgCC,OAAhC,EAAP;AACD,GAFgD,CAAjD;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EALqC,CAOrC;AAEA;;AAEA,SAAO;AACLO,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAER,OAAO,CAACS,GAAR,CAAaC,MAAD,IAAY;AAC7B,aAAO;AACLC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAEF,MAAM,CAACP,GAAP,CAAWU,QAAX;AADJ;AADH,OAAP;AAKD,KANM;AAFF,GAAP;AAUD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBM,QAAS,EAA/C;AACA,MAAIlB,UAAJ;;AACA,MAAI;AACFA,IAAAA,UAAU,GAAG,MAAMH,2BAA2B,CAAEU,UAAD,IAAgB;AAC7D,aAAOA,UAAU,CAACe,OAAX,CAAmB;AAAEb,QAAAA,GAAG,EAAES;AAAP,OAAnB,CAAP;AACD,KAF6C,CAA9C;AAGAP,IAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BW,IAAI,CAACC,SAAL,CAAexB,UAAf,CAA2B,EAAlE;AACD,GALD,CAKE,OAAOyB,CAAP,EAAU;AACVd,IAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACD;;AACD,SAAO;AACL1B,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEA;AADP;AADF,GAAP;AAKD;AAED,eAAeF,iBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { connectToMongoDBAndRunQuery } from \"../../utils/helpers\";\n\nconst MeetupDetailsPage = (props) => {\n  return (\n    <MeetupDetail\n      title={props.meetupData.title}\n      image={props.meetupData.image}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const meetups = await connectToMongoDBAndRunQuery((collection) => {\n    return collection.find({}, { _id: 1 }).toArray();\n  });\n\n  console.log(meetups);\n\n  // const pathIdArray =\n\n  // console.log(pathIdArray);\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => {\n      return {\n        params: {\n          meetupId: meetup._id.toString(),\n        },\n      };\n    }),\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  console.log(`Hey, I'm the meetupId: ${meetupId}`);\n  let meetupData;\n  try {\n    meetupData = await connectToMongoDBAndRunQuery((collection) => {\n      return collection.findOne({ _id: meetupId });\n    });\n    console.log(`Hi, I'm the meetupData: ${JSON.stringify(meetupData)}`);\n  } catch (e) {\n    console.log(e);\n  }\n  return {\n    props: {\n      meetupData: meetupData,\n    },\n  };\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}