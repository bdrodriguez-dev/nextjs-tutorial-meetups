{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { connectToMongoDBAndRunQuery } from \"../utils/helpers\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Home\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"some description\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n}\n\nexport async function getStaticProps() {\n  // fetch data from api\n  let meetups; // try {\n  //   const client = await MongoClient.connect(\n  //     \"mongodb+srv://brodriguez:qwg0pFdmOTAEtqQf@cluster0.knibf.mongodb.net/meetups?retryWrites=true&w=majority\"\n  //   );\n  //   const db = client.db();\n  //   const meetupsCollection = db.collection(\"meetups\");\n  //   meetups = await meetupsCollection.find().toArray();\n  //   await client.close();\n  //   // return result;\n  // } catch (e) {\n  //   console.log(e);\n  // }\n\n  try {\n    meetups = await connectToMongoDBAndRunQuery(collection => {\n      return collection.find().toArray();\n    }); // console.log(\n    //   `Meetups from root index.js line 22: ${JSON.stringify(meetups)}`\n    // );\n  } catch (e) {\n    console.log(`Error from root index.js line 24 ${e}`);\n  } // console.log(`Meetups from root index.js line 28: ${JSON.stringify(meetups)}`);\n\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => {\n        return {\n          id: meetup._id.toString(),\n          title: meetup.title,\n          description: meetup.description,\n          image: meetup.image,\n          address: meetup.address\n        };\n      }),\n      revalidate: 10\n    }\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}