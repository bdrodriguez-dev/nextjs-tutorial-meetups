{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/braulio-rodriguez/Documents/Development/tutorial-projects/nextjs-course/react-meetups/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { connectToMongoDBAndRunQuery } from \"../../utils/helpers\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const meetupData = connectToMongoDBAndRunQuery(collection => {\n    return collection.findOne({\n      meetupId: meetupId\n    }).toArray();\n  });\n  return {\n    props: {\n      meetupData: meetupData.map(meetup => {\n        return {\n          id: meetup._id.toString(),\n          title: meetup.title,\n          description: meetup.description,\n          image: meetup.image,\n          address: meetup.address\n        };\n      })\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/braulio-rodriguez/Documents/Development/tutorial-projects/nextjs-course/react-meetups/pages/[meetupId]/index.js"],"names":["MeetupDetail","connectToMongoDBAndRunQuery","MeetupDetails","props","meetupData","title","image","address","description","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","collection","findOne","toArray","map","meetup","id","_id","toString"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,2BAAT,QAA4C,qBAA5C;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KADK,EAML;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KANK;AAFF,GAAP;AAeD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AACA,QAAMT,UAAU,GAAGH,2BAA2B,CAAEe,UAAD,IAAgB;AAC7D,WAAOA,UAAU,CAACC,OAAX,CAAmB;AAAEJ,MAAAA,QAAQ,EAAEA;AAAZ,KAAnB,EAA2CK,OAA3C,EAAP;AACD,GAF6C,CAA9C;AAGA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEA,UAAU,CAACe,GAAX,CAAgBC,MAAD,IAAY;AACrC,eAAO;AACLC,UAAAA,EAAE,EAAED,MAAM,CAACE,GAAP,CAAWC,QAAX,EADC;AAELlB,UAAAA,KAAK,EAAEe,MAAM,CAACf,KAFT;AAGLG,UAAAA,WAAW,EAAEY,MAAM,CAACZ,WAHf;AAILF,UAAAA,KAAK,EAAEc,MAAM,CAACd,KAJT;AAKLC,UAAAA,OAAO,EAAEa,MAAM,CAACb;AALX,SAAP;AAOD,OARW;AADP;AADF,GAAP;AAaD;AAED,eAAeL,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { connectToMongoDBAndRunQuery } from \"../../utils/helpers\";\n\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      title={props.meetupData.title}\n      image={props.meetupData.image}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  return {\n    fallback: false,\n    paths: [\n      {\n        params: {\n          meetupId: \"m1\",\n        },\n      },\n      {\n        params: {\n          meetupId: \"m2\",\n        },\n      },\n    ],\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const meetupData = connectToMongoDBAndRunQuery((collection) => {\n    return collection.findOne({ meetupId: meetupId }).toArray();\n  });\n  return {\n    props: {\n      meetupData: meetupData.map((meetup) => {\n        return {\n          id: meetup._id.toString(),\n          title: meetup.title,\n          description: meetup.description,\n          image: meetup.image,\n          address: meetup.address,\n        };\n      }),\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}