{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { connectToMongoDBAndRunQuery } from \"../../utils/helpers\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsx(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  });\n};\n\nexport async function getStaticPaths() {\n  const meetups = await connectToMongoDBAndRunQuery(collection => {\n    return collection.find({}, {\n      _id: 1\n    }).toArray();\n  });\n  console.log(meetups); // const pathIdArray =\n  // console.log(pathIdArray);\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      };\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId; // console.log(`Hey, I'm the meetupId: ${meetupId}`);\n\n  let meetupData;\n\n  try {\n    meetupData = await connectToMongoDBAndRunQuery(collection => {\n      return collection.findOne({\n        _id: ObjectId(meetupId)\n      });\n    }); // console.log(`Hi, I'm the meetupData: ${JSON.stringify(meetupData)}`);\n  } catch (e) {\n    console.log(e);\n  }\n\n  return {\n    props: {\n      meetupData: {\n        title: meetupData.title,\n        image: meetupData.image,\n        address: meetupData.address,\n        description: meetupData.description\n      }\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":null,"metadata":{},"sourceType":"module"}