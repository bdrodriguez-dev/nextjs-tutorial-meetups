{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/braulio-rodriguez/Documents/Development/tutorial-projects/nextjs-course/react-meetups/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { connectToMongoDBAndRunQuery } from \"../utils/helpers\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport async function getStaticProps() {\n  // fetch data from api\n  let meetups;\n\n  try {\n    meetups = await connectToMongoDBAndRunQuery(collection => {\n      return collection.find().toArray();\n    });\n    console.log(meetups);\n  } catch (e) {\n    console.log(e);\n  }\n\n  return {\n    //   props: {\n    //     meetups: meetups.map((meetup) => {\n    //       return {\n    //         id: meetup._id.toString(),\n    //         title: meetup.title,\n    //         description: meetup.description,\n    //         image: meetup.image,\n    //         address: meetup.address,\n    //       };\n    //     }),\n    //\n    //   revalidate: 10,\n    // }\n    props: {\n      meetups: [{\n        id: 1,\n        title: \"test\",\n        description: \"description\",\n        image: \"image\",\n        address: \"address\"\n      }]\n    }\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/braulio-rodriguez/Documents/Development/tutorial-projects/nextjs-course/react-meetups/pages/index.js"],"names":["MongoClient","MeetupList","connectToMongoDBAndRunQuery","HomePage","props","meetups","getStaticProps","collection","find","toArray","console","log","e","id","title","description","image","address"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,2BAAT,QAA4C,kBAA5C;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,MAAID,OAAJ;;AACA,MAAI;AACFA,IAAAA,OAAO,GAAG,MAAMH,2BAA2B,CAAEK,UAAD,IAAgB;AAC1D,aAAOA,UAAU,CAACC,IAAX,GAAkBC,OAAlB,EAAP;AACD,KAF0C,CAA3C;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,GAND,CAME,OAAOO,CAAP,EAAU;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;;AAED,SAAO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAR,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,CACP;AACEQ,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,WAAW,EAAE,aAHf;AAIEC,QAAAA,KAAK,EAAE,OAJT;AAKEC,QAAAA,OAAO,EAAE;AALX,OADO;AADJ;AAdF,GAAP;AA0BD;AAED,eAAed,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { connectToMongoDBAndRunQuery } from \"../utils/helpers\";\n\nfunction HomePage(props) {\n  return (\n    <>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n}\n\nexport async function getStaticProps() {\n  // fetch data from api\n  let meetups;\n  try {\n    meetups = await connectToMongoDBAndRunQuery((collection) => {\n      return collection.find().toArray();\n    });\n\n    console.log(meetups);\n  } catch (e) {\n    console.log(e);\n  }\n\n  return {\n    //   props: {\n    //     meetups: meetups.map((meetup) => {\n    //       return {\n    //         id: meetup._id.toString(),\n    //         title: meetup.title,\n    //         description: meetup.description,\n    //         image: meetup.image,\n    //         address: meetup.address,\n    //       };\n    //     }),\n    //\n    //   revalidate: 10,\n    // }\n    props: {\n      meetups: [\n        {\n          id: 1,\n          title: \"test\",\n          description: \"description\",\n          image: \"image\",\n          address: \"address\",\n        },\n      ],\n    },\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}